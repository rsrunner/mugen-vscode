{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "CNS",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#sections"
		},
		{
			"include": "#keyvalue"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#functions"
		}
	],
	"repository": {
		"sections": {
			"name": "keyword.other.cns",
			"begin": "^\\s*\\[",
			"end": "[\\]|\\n]",
			"patterns": [
				{
					"include": "#numbers"
				}
			]
		},
		"keyvalue": {
			"match": "^\\s*([a-zA-Z-._][a-zA-Z0-9-._]*)\\s*(=)\\s*",
			"captures": {
				"1": {
					"name": "string.other.cns meta.mapping.key.cns"
				},
				"2": {
					"name": "keyword.operator.assignment.cns punctuation.separator.mapping.key-value.cns"
				}
			}
		},
		"comments": {
			"name": "comment.line.cns",
			"begin": ";",
			"end": "$\\n?"
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.cns",
					"match": "[0-9]*\\.[0-9]+"
				},
				{
					"name": "constant.numeric.cns",
					"match": "[0-9]+"
				},
				{
					"name": "constant.numeric.cns",
					"match": "[a-zA-Z]{1,2}[0-9]+\\b"
				}
			]
		},
		"functions": {
			"patterns": [
				{
					"match": "(?i)(const|stagevar|stageconst|gethitvar)\\s*\\((.*)\\)",
					"captures": {
						"1": {
							"name": "support.function.cns"
						},
						"2": {
							"name": "string.unquoted.cns"
						}
					}
				},
				{
					"match": "([a-zA-Z-._][a-zA-Z0-9-._]*)\\s*(\\()",
					"captures": {
						"1": {
							"name": "support.function.cns"
						}
					}
				},
				{
					"match": "([a-zA-Z-._][a-zA-Z0-9-._]*)\\s+([a-zA-Z])",
					"captures": {
						"1": {
							"name": "support.function.cns"
						}
					}
				},
				{
					"match": "([a-zA-Z-._][a-zA-Z0-9-._]*)",
					"captures": {
						"1": {
							"name": "support.function.cns"
						}
					}
				}
			]
		},
		"operators": {
			"name": "keyword.operator.cns",
			"match": "(!|~|-|\\*\\*|\\*|/|%|\\+|>|>=|<|<=|=|!=|:=|&|\\^|\\||&&|\\^\\^|\\|\\|)"
		},
		"strings": {
			"patterns": 
			[
				{
					"name": "string.quoted.double.cns",
					"begin": "\"",
					"end": "\""
				}
			]
		}
	},
	"scopeName": "source.cns"
}